name: Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        ref: x86-64-support-sourcesdk
        path: 'garrysmod_common'
    - name: Заинсталить всякую хуйню
      run: |
        wget https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz -O premake.tar.gz
        tar -xvf premake.tar.gz
        chmod +x premake5
        sudo cp premake5 /usr/bin
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y liblz4-dev liblz4-dev:i386
        export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/lib:$LD_LIBRARY_PATH
        sudo apt-get -y --no-install-recommends install build-essential clang-9 cmake gdb git wget g++ g++-multilib gcc-multilib
        gcc --version
        git clone https://github.com/lz4/lz4.git $HOME/lz4
        cd $HOME/lz4 && make clean && make build && sudo make install && cd ../
    - name: Generate Project
      run: |
        premake5 --gmcommon=garrysmod_common gmake
    - name: Make
      run: |
        cd projects/linux/gmake
        make
        make config=releasewithsymbols_x86_64
        ls
    - name: Upload Linux Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux_build_artifacts
        path: |
          projects/linux/gmake/**/x86/**
          projects/linux/gmake/**/x86_64/**
  build-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        path: 'garrysmod_common'
        ref: x86-64-support-sourcesdk
    - name: Download and Install Visual Studio Build Tools 2019
      shell: cmd
      run: |
        curl -L -o vs_buildtools.exe https://aka.ms/vs/16/release/vs_buildtools.exe
        start /wait vs_buildtools.exe --quiet --wait --norestart --nocache --includeRecommended --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Workload.MSBuildTools

    - name: Install Git
      shell: cmd
      run: |
        curl -L -o Git.exe https://github.com/git-for-windows/git/releases/download/v2.40.1.windows.1/Git-2.40.1-64-bit.exe
        .\Git.exe /VERYSILENT /NORESTART

    - name: Install CMake
      shell: cmd
      run: |
        curl -L -o cmake.zip https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-windows-x86_64.zip
        tar -xf cmake.zip
        copy .\cmake-3.20.5-windows-x86_64\bin\cmake.exe C:\Windows\System32

    - name: Install Premake5
      shell: cmd
      run: |
        curl -L -o premake5.zip https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-windows.zip
        tar -xf premake5.zip
        copy .\premake5.exe C:\Windows\System32

    - name: Set up environment variables
      shell: cmd
      run: |
        echo "::add-path::C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin"

    - name: Copy Source Files
      shell: cmd
      run: |
        mkdir C:\root\source
        xcopy /E /I source\ C:\root\source\
        copy premake5.lua C:\root\premake5.lua

    - name: Run Premake and Build Project
      shell: cmd
      run: |
        cd C:\root
        premake5 --os=windows --arch=x86 gmake2
        cd projects\windows\gmake2
        set LIBRARY_PATH=C:\Program Files (x86)\Windows Kits\10\Lib\10.0.17763.0\ucrt\x86
        set CPLUS_INCLUDE_PATH=C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt
        msbuild.exe -t:Rebuild -p:Configuration=Release -p:Platform=Win32
        xcopy /Y **\*.dll \output
        dir \output
    - name: Build
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=Release /p:Platform=Win32 lz4.sln
    - uses: actions/upload-artifact@v4
      with:
        name: gmsv_lz4_windows.dll
        path: projects/windows/vs2019/x86/ReleaseWithSymbols/gmsv_lz4_win32.dll
    - name: Build 64
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=Release /p:Platform=x64 lz4.sln
    - uses: actions/upload-artifact@v4
      with:
        name: gmsv_lz4_win64.dll
        path: projects/windows/vs2019/x86_64/ReleaseWithSymbols/gmsv_lz4_win64.dll
